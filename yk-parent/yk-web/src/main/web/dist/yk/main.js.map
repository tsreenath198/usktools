{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/d-milan/d-milan.component.css","webpack:///./src/app/d-milan/d-milan.component.html","webpack:///./src/app/d-milan/d-milan.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/k-level/k-level.component.css","webpack:///./src/app/k-level/k-level.component.html","webpack:///./src/app/k-level/k-level.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/searchdmilan/searchdmilan.component.css","webpack:///./src/app/searchdmilan/searchdmilan.component.html","webpack:///./src/app/searchdmilan/searchdmilan.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { DMilanComponent } from './d-milan/d-milan.component';\nimport { SearchdmilanComponent } from './searchdmilan/searchdmilan.component';\nimport { KLevelComponent } from './k-level/k-level.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'searchdmilan', component: SearchdmilanComponent },\n  { path: 'd-milan', component: DMilanComponent },\n  { path: 'k-level', component: KLevelComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor() { }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { DMilanComponent } from \"./d-milan/d-milan.component\";\n\nimport { HttpService } from \"./http.service\";\nimport { LoginComponent } from './login/login.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SearchdmilanComponent } from './searchdmilan/searchdmilan.component';\nimport { KLevelComponent } from './k-level/k-level.component';\n\n@NgModule({\n  declarations: [\n    \n    AppComponent,\n    DMilanComponent,\n    LoginComponent,\n    SearchdmilanComponent,\n    KLevelComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".pt10{\\r\\n    padding-top: 10px;\\r\\n\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZC1taWxhbi9kLW1pbGFuLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7O0FBRXJCIiwiZmlsZSI6InNyYy9hcHAvZC1taWxhbi9kLW1pbGFuLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucHQxMHtcclxuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xyXG5cclxufSJdfQ== */\"","module.exports = \"<!-- Form to insert the details of a kendram person -->\\n<form name=\\\"form\\\" (ngSubmit)=\\\" f.form.valid && addToList()\\\" #f=\\\"ngForm\\\" novalidate>\\n  <!-- Name section in form -->\\n  <div class=\\\"row pt10\\\">\\n    <div class=\\\"input-group\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\">First and last name</span>\\n      </div>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"surname\\\" [(ngModel)]=\\\"ykCurrData.surname\\\" #surname=\\\"ngModel\\\"\\n        [ngClass]=\\\"{'is-invalid': f.submitted && surname.invalid}\\\" placeholder=\\\"Surname\\\" required />\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"middleName\\\" [(ngModel)]=\\\"ykCurrData.middleName\\\" #middleName=\\\"ngModel\\\"\\n        [ngClass]=\\\"{'is-invalid': f.submitted && middleName.invalid}\\\" placeholder=\\\"Middle Name\\\" required />\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"ykCurrData.name\\\" #name=\\\"ngModel\\\" [ngClass]=\\\"{'is-invalid': f.submitted && name.invalid}\\\"\\n        placeholder=\\\"Name\\\" required />\\n        <div class=\\\"invalid-feedback\\\">\\n            Username is required field\\n          </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row pt10\\\">\\n    <div class=\\\"input-group input-group-sm mb-3 col-sm-3\\\">\\n      <!-- Taluka Section in form -->\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-sm\\\">Taluka</span>\\n      </div>\\n      <select class=\\\"form-control\\\" name=\\\"taluka\\\" [(ngModel)]=\\\"ykCurrData.taluka\\\" #taluka=\\\"ngModel\\\">\\n        <option hidden selected></option>\\n        <option *ngFor=\\\"let tl of thalukaList\\\">{{tl}}</option>\\n      </select>\\n      <!-- [ngClass]=\\\"{'is-invalid': f.submitted && taluka.invalid}\\\"\\n        <div *ngIf=\\\"f.submitted && taluka.invalid\\\" class=\\\"invalid-feedback\\\">\\n        <div *ngIf=\\\"taluka.errors.required\\\">Taluka is required</div>\\n      </div> -->\\n    </div>\\n    <!-- Patti Section in form -->\\n    <div class=\\\"input-group input-group-sm mb-3 col-sm-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-sm\\\">Patti</span>\\n      </div>\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"ykCurrData.patti\\\" name=\\\"patti\\\" #patti=\\\"ngModel\\\" />\\n      <!-- [ngClass]=\\\"{'is-invalid': f.submitted && patti.invalid}\\\"\\n        <div *ngIf=\\\"f.submitted && patti.invalid\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"patti.errors.required\\\">Patti is required</div>\\n        </div>-->\\n    </div>\\n    <!-- Video kendra section in form -->\\n    <div class=\\\"input-group input-group-sm mb-3 col-sm-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-sm\\\">Video Kendra</span>\\n      </div>\\n      <input class=\\\"form-control\\\" [(ngModel)]=\\\"ykCurrData.videoKendra\\\" name=\\\"videoKendra\\\" #videoKendra=\\\"ngModel\\\" />\\n      <!-- [ngClass]=\\\"{'is-invalid': f.submitted && videoKendra.invalid}\\\"\\n        <div *ngIf=\\\"f.submitted && videoKendra.invalid\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"videoKendra.errors.required\\\">Video Kendra is required</div>\\n        </div> -->\\n    </div>\\n    <!-- Kenra section in form -->\\n    <div class=\\\"input-group input-group-sm mb-3 col-sm-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-sm\\\">Kendra</span>\\n      </div>\\n      <input class=\\\"form-control\\\" [(ngModel)]=\\\"ykCurrData.kendra\\\" name=\\\"kendra\\\" #kendra=\\\"ngModel\\\" />\\n    </div>\\n  </div>\\n  <div class=\\\"row pt10\\\">\\n    <!-- kendra type section in form -->\\n    <div class=\\\"input-group input-group-sm mb-3 col-sm-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-sm\\\">Kendra Type</span>\\n      </div>\\n      <select class=\\\"custom-select\\\" name=\\\"kendraType\\\" [(ngModel)]=\\\"ykCurrData.kendraType\\\" #kendraType=\\\"ngModel\\\">\\n        <option *ngFor=\\\"let ktl of kendraTypeList\\\">{{ktl}}</option>\\n      </select>\\n    </div>\\n    <!-- Jimmedari section in form -->\\n    <div class=\\\"input-group input-group-sm mb-3 col-sm-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-sm\\\">Jimmedari</span>\\n      </div>\\n      <select class=\\\"custom-select\\\" [(ngModel)]=\\\"ykCurrData.jimmedari\\\" placeholder=\\\"Jimmedari\\\" name=\\\"jimmedari\\\"\\n        #jimmedari=\\\"ngModel\\\">\\n        <option *ngFor=\\\"let jl of jimmedariList\\\">{{jl}}</option>\\n      </select>\\n    </div>\\n    <!-- Contact section in form -->\\n    <div class=\\\"input-group input-group-sm mb-3 col-sm-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-sm\\\">Contact</span>\\n      </div>\\n      <input type=\\\"text\\\" class=\\\"form-control col\\\" [(ngModel)]=\\\"ykCurrData.contact\\\" name=\\\"contact\\\" #contact=\\\"ngModel\\\"\\n        [ngClass]=\\\"{ 'is-invalid': f.submitted && contact.invalid }\\\" required minlength=\\\"10\\\" maxlength=\\\"11\\\" />\\n       <div *ngIf=\\\"f.submitted && contact.invalid\\\" class=\\\"invalid-feedback\\\">\\n        <div *ngIf=\\\"contact.errors.required\\\">Contact is required</div>\\n      </div>\\n      <div [hidden]=\\\"!name.errors.minlength\\\">\\n          Name must be at least 10 characters long.\\n        </div>\\n        <div [hidden]=\\\"!name.errors.maxlength\\\">\\n          Name cannot be more than 11 characters long.\\n        </div>\\n    </div>\\n    <!-- Dob section in form  -->\\n    <div class=\\\"input-group input-group-sm mb-3 col-sm-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-sm\\\">DoB</span>\\n      </div>\\n      <input type=\\\"date\\\" class=\\\"form-control col\\\" [(ngModel)]=\\\"ykCurrData.dob\\\" (change)=\\\"getDob(ykCurrData)\\\"\\n        placeholder=\\\"dob\\\" name=\\\"dob\\\" #dob=\\\"ngModel\\\" />\\n    </div>\\n  </div>\\n  <div class=\\\"row pt10\\\">\\n    <!-- Residence section section in form -->\\n    <div class=\\\"input-group input-group-sm mb-3 col-sm-3\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <span class=\\\"input-group-text\\\" id=\\\"inputGroup-sizing-sm\\\">Recidence</span>\\n      </div>\\n      <input class=\\\"form-control col\\\" [(ngModel)]=\\\"ykCurrData.residence\\\" name=\\\"residence\\\" #residence=\\\"ngModel\\\" />\\n    </div>\\n  </div>\\n  <div class=\\\"input-group input-group-sm mb-3 col-sm-3\\\">\\n    <!-- <button class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addToList()\\\">Add</button>-->\\n    <button [disabled]=\\\"loading\\\" class=\\\"tn btn-primary btn-sm\\\">Add</button>\\n  </div>\\n</form>\\n<!-- Displaying all the filled details in the above form. -->\\n<div class=\\\"mt-4\\\">\\n  <table class=\\\"table\\\" id=\\\"table_id\\\" *ngIf=\\\"ykList.length\\\">\\n    <thead class=\\\"thead-dark\\\">\\n      <tr>\\n        <th>Taluka</th>\\n        <th>Patti</th>\\n        <th>Video Kendra</th>\\n        <th>Kendra</th>\\n        <th>Kendra Type</th>\\n        <th>Jimmedari</th>\\n        <th colspan=\\\"3\\\">Full Name</th>\\n        <th>Contact</th>\\n        <th>DOB</th>\\n        <th>Age</th>\\n        <th>Residence</th>\\n        <th>Action</th>\\n      </tr>\\n    </thead>\\n    <!-- displays details filled in form -->\\n    <tbody id=\\\"table_id\\\">\\n      <tr *ngFor=\\\"let yk of ykList;let i = index;let f= first;let l= last\\\">\\n        <td>\\n          <span>{{yk.taluka}}</span>\\n        </td>\\n        <td>\\n          <span>{{yk.patti}}</span>\\n        </td>\\n        <td>\\n          <span>{{yk.videoKendra}}</span>\\n        </td>\\n        <td>\\n          <span>{{yk.kendra}}</span>\\n        </td>\\n        <td>\\n          <span>{{yk.kendraType}}</span>\\n        </td>\\n        <td>\\n          <span>{{yk.jimmedari}}</span>\\n        </td>\\n        <td>\\n          <span>{{yk.surname}}</span>\\n        </td>\\n        <td>\\n          <span>{{yk.middleName}}</span>\\n        </td>\\n        <td>\\n          <span>{{yk.name}}</span>\\n        </td>\\n        <td>\\n          <span>{{yk.contact}}</span>\\n        </td>\\n        <td>\\n          <span>{{yk.dob | date}}</span>\\n        </td>\\n        <td>\\n          <span>{{yk.age}}</span>\\n        </td>\\n        <td>\\n          <span>{{yk.residence}}</span>\\n        </td>\\n        <td>\\n          <!-- Delete's the particular row data from the table -->\\n          <button type=\\\"button\\\" (click)=\\\"delete(i)\\\" class=\\\"btn btn-primary btn-sm\\\">Delete</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <!-- Submits all the data of the row to database -->\\n  <button *ngIf=\\\"ykList.length\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"submit()\\\">Submit</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DmilanModel } from './d-milan.model';\nimport { HttpService } from \"../http.service\";\nimport { Router } from '@angular/router';\nimport { FormBuilder, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-d-milan',\n  templateUrl: './d-milan.component.html',\n  styleUrls: ['./d-milan.component.css']\n})\nexport class DMilanComponent implements OnInit {\n  public ykList: DmilanModel[] = [];\n  public ykCurrData: DmilanModel = <DmilanModel>{ name: \"\", age: 0, contact: \"\", dob: new Date(), jimmedari: \"\", kendra: \"\", kendraType: \"\", middleName: \"\", patti: \"\", residence: \"\", surname: \"\", taluka: \"\", videoKendra: \"\" };\n  public selectedIndex: number = 0;\n  public kendraTypeList = [\"YK\", \"DPC\"];\n  public jimmedariList = [\"Sanchalak\", \"Sahasanchalak\"];\n  public thalukaList = [\"Armoor\", \"Bheemgal\", \"Bodhan\", \"Banswada\", \"Kamareddy\", \"Domakonda\", \"Nizamabad\", \"Yellareddy\", \"Madnoor\"];\n  constructor(private clientHttp: HttpService,private router: Router, private formBuilder: FormBuilder) { }\n  ngOnInit() {\n  }\n  //addToList() pushes the data to the ykList array\n  addToList(dMilanForm: NgForm) {\n    this.ykList.unshift(this.ykCurrData);\n    this.ykCurrData = <DmilanModel>{ name: \"\", age: 0, contact: \"\", dob: new Date(), jimmedari: \"\", kendra: \"\", kendraType: \"\", middleName: \"\", patti: \"\", residence: \"\", surname: \"\", taluka: \"\", videoKendra: \"\" };\n    console.log(this.ykList);\n    dMilanForm.form.reset;\n  }\n  //delete() deletes the row based on index\n  delete(index): void {\n    this.ykList.splice(index, 1)\n  }\n  //getDob() calculates the age based on date of birth\n  getDob(yuvn) {\n    let timeDiff = Math.abs(new Date().getTime() - new Date(yuvn.dob).getTime());\n    yuvn.age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365);\n  }\n  //submit() submits all data to database and navigate to searchdmilan component\n  submit(): void {\n    this.clientHttp.create(this.ykList, 'create').subscribe(resp => {\n      this.router.navigate(['/', 'searchdmilan'])\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  configUrl: string = \"http://106.0.37.69:8282/api/yuvan/\"\n  constructor(private http: HttpClient) { }\n  create(data: any, url) {\n    return this.http.post(this.configUrl + url, data);\n  }\n  public getReq(URL: string) {\n    return this.http.get(this.configUrl + URL);\n  }\n  public getLogin(URL: string) {\n    return this.http.get(URL);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2stbGV2ZWwvay1sZXZlbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  k-level works!\\n</p>\\n\\n<!--\\n  country - i/p box\\n  sanghat/state - i/p box\\n  jllla name - i/p box\\n  jilla sannidhata - select box (from json)\\n  taluka name - i/p box\\n  taluka sannidhata - select box (from json)\\n  groupname - i/p box\\n  avekshak name - select box (from json)\\n  kendra name - i/p \\n  kendra type - select (Yuva kendra / DPC )\\n  YuvaYuvati - selecct (Yuva / Yuvati)\\n  Year in which kendra Started - 1997\\n  category - select (Village , City Vistar)\\n  Kendra number - i/p (only digits)\\n  status - selct (Active,Merged,Inactive)\\n  year merged - i/p\\n  merged to - i/p\\n  sanchalak1 - select (from json)\\n  sanchalak2 - select (from json)\\n  min attendence - i/p\\n  max attendance - i/p\\n  Yuva kendra conducted in - selct (Home,School or College,Classes,Others)\\n  Name of Village of Yuvakendra - i/p \\n  Name of Nearest Bus Stand Or Main Road (Land Mark) - i/p\\n  Yuvakendra Sthal - Complete postal Address (compulsory) - textarea\\n  Yuva Kendra Sthal - Pincode (compulsory) - i/p (only digits)\\n  Day Of Yuvakendra - Weekday - slect (from json)\\n  Time Of Yuvakendra - i/p (Placeholder \\\"format HH:MM AM/PM\\\")\\n  Swadhyay Kendra based on Area/Village/Vistar - i/p\\n  Village (As Per Swadhyay Kendra) - i/p\\n-->\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-k-level',\n  templateUrl: './k-level.component.html',\n  styleUrls: ['./k-level.component.css']\n})\nexport class KLevelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".center-screen {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    min-height: 80vh;\\r\\n  }\\r\\n \\r\\n  .text-color{\\r\\n      color:#286090;\\r\\n  }\\r\\n \\r\\n  .wth33{\\r\\n      width: 33%;\\r\\n      border: 1px solid lightgray;\\r\\n      padding: 20px;\\r\\n      border-radius: 5px;\\r\\n  }\\r\\n \\r\\n  .text-center{\\r\\n        text-align: center;\\r\\n  }\\r\\n \\r\\n  .txt-right{\\r\\n    font-size: 15px;\\r\\n    text-indent: 40%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixnQkFBZ0I7RUFDbEI7O0VBRUE7TUFDSSxhQUFhO0VBQ2pCOztFQUNBO01BQ0ksVUFBVTtNQUNWLDJCQUEyQjtNQUMzQixhQUFhO01BQ2Isa0JBQWtCO0VBQ3RCOztFQUNBO1FBQ00sa0JBQWtCO0VBQ3hCOztFQUNBO0lBQ0UsZUFBZTtJQUNmLGdCQUFnQjtFQUNsQiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2VudGVyLXNjcmVlbiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIG1pbi1oZWlnaHQ6IDgwdmg7XHJcbiAgfVxyXG4gXHJcbiAgLnRleHQtY29sb3J7XHJcbiAgICAgIGNvbG9yOiMyODYwOTA7XHJcbiAgfVxyXG4gIC53dGgzM3tcclxuICAgICAgd2lkdGg6IDMzJTtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgbGlnaHRncmF5O1xyXG4gICAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgfVxyXG4gIC50ZXh0LWNlbnRlcntcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gIC50eHQtcmlnaHR7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICB0ZXh0LWluZGVudDogNDAlO1xyXG4gIH0iXX0= */\"","module.exports = \"<div class=\\\"center-screen rounded\\\">\\n  <div class=\\\"wth33\\\">\\n    <!-- Login page form -->\\n    <h2 class=\\\"text-center\\\">Kendram</h2>\\n    <!-- validate() checks the login id and logs to next page if valid -->\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && validate()\\\" #f=\\\"ngForm\\\" novalidate>\\n      <!-- Username field with validation -->\\n      <div class=\\\"form-group\\\">\\n        <small class=\\\"text-muted\\\">Username</small>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"uname\\\" [(ngModel)]=\\\"username\\\" placeholder=\\\"Username\\\" #uname=\\\"ngModel\\\"\\n          [ngClass]=\\\"{ 'is-invalid': f.submitted && uname.invalid }\\\" required />\\n        <div *ngIf=\\\"f.submitted && uname.invalid\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"uname.errors.required\\\">Username is required</div>\\n        </div>\\n      </div>\\n      <!-- Password field with validation -->\\n      <div class=\\\"form-group\\\">\\n        <small class=\\\"text-muted\\\">Password</small>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" name=\\\"pwd\\\" [(ngModel)]=\\\"password\\\" #pwd=\\\"ngModel\\\"\\n          [ngClass]=\\\"{ 'is-invalid': f.submitted && pwd.invalid }\\\" required />\\n        <div *ngIf=\\\"f.submitted && pwd.invalid\\\" class=\\\"invalid-feedback\\\">\\n          <div *ngIf=\\\"pwd.errors.required\\\">Password is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"clearfix form-group\\\">\\n        <span class=\\\"float-right\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Sign-in</button>\\n        </span>\\n      </div>\\n    </form>\\n    <hr>\\n    <div class=\\\"clearfix\\\">\\n      <a class=\\\"float-left text-color\\\" href=\\\"\\\">Forgot Password</a>\\n      <a href=\\\"\\\" class=\\\"float-right text-color\\\">Register</a>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoginModel } from './login.model';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private loginService: HttpService, private router:Router) { }\n  username: string = \"\";\n  password: string = \"\";\n  ngOnInit() {\n\n  }\n  validate() {\n    this.loginService.getLogin('assets/login.json').subscribe(resp => {\n      let response = resp as LoginModel\n      if (response.username == this.username) {\n        console.log(\"succes\");\n        this.router.navigate(['/', 'searchdmilan'])\n      }\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXJjaGRtaWxhbi9zZWFyY2hkbWlsYW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\" mt-4\\\">\\n    <div class=\\\"clearfix\\\">\\n        <span class=\\\"float-left form-group col-3\\\">\\n          <!-- inputfield helps to add the data in the list -->\\n          <input  type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"yInput\\\" placeholder=\\\"Add Y Detail\\\">\\n        </span>\\n        <span class=\\\"float-right col-1\\\">\\n          <button class=\\\"btn btn-primary btn-sm float-right\\\" (click)=\\\"addToList()\\\">Add</button>\\n        </span>\\n      </div>\\n      <!-- Displays data which is retrived from database -->\\n  <table class=\\\"table\\\" id=\\\"table_id\\\" *ngIf=\\\"ykList.length\\\">\\n    <thead class=\\\"thead-dark\\\">\\n      <tr>\\n        <th>Taluka</th>\\n        <th>Patti</th>\\n        <th>Video Kendra</th>\\n        <th>Kendra</th>\\n        <th>Kendra Type</th>\\n        <th>Jimmedari</th>\\n        <th colspan=\\\"3\\\">Full Name</th>\\n        <th>Contact</th>\\n        <th>DOB</th>\\n        <th>Age</th>\\n        <th>Residence</th>\\n        <th>Action</th>\\n      </tr>\\n    </thead>\\n    <tbody id=\\\"table_id\\\">\\n      <tr *ngFor=\\\"let yk of ykList;let i = index\\\">\\n\\n        <td>\\n          <span >{{yk.taluka}}</span>\\n        </td>\\n        <td>\\n          <span >{{yk.patti}}</span>\\n        </td>\\n        <td>\\n          <span >{{yk.videoKendra}}</span>\\n        </td>\\n        <td>\\n          <span >{{yk.kendra}}</span>\\n        </td>\\n        <td>\\n          <span >{{yk.kendraType}}</span>\\n        </td>\\n        <td>\\n          <span >{{yk.jimmedari}}</span>\\n        </td>\\n        <td>\\n          <span >{{yk.surname}}</span>\\n        </td>\\n        <td>\\n          <span >{{yk.middleName}}</span>\\n        </td>\\n        <td>\\n          <span >{{yk.name}}</span>\\n        </td>\\n        <td>\\n          <span >{{yk.contact}}</span>\\n        </td>\\n        <td>\\n          <span >{{yk.dob | date}}</span>\\n        </td>\\n        <td>\\n          <span>{{yk.age}}</span>\\n        </td>\\n        <td>\\n          <span >{{yk.residence}}</span>\\n        </td>\\n        <td>\\n            <!-- Delete's the particular row data from the table -->\\n            <button type=\\\"button\\\" (click)=\\\"delete(i)\\\" class=\\\"btn btn-primary btn-sm\\\">Delete</button>\\n          </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DmilanModel } from '../d-milan/d-milan.model';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-searchdmilan',\n  templateUrl: './searchdmilan.component.html',\n  styleUrls: ['./searchdmilan.component.css']\n})\nexport class SearchdmilanComponent implements OnInit {\n  public yInput:string;\n  public ykCurrData: DmilanModel = <DmilanModel>{ name: \"\", age: 0, contact: \"\", dob: new Date(), jimmedari: \"\", kendra: \"\", kendraType: \"\", middleName: \"\", patti: \"\", residence: \"\", surname: \"\", taluka: \"\", videoKendra: \"\" };\n  public ykList: DmilanModel[] = [];\n  constructor(private http: HttpService, private router: Router) { }\n  //gets data from database\n  ngOnInit() {\n    this.http.getReq('getAll').subscribe(resp => {\n      this.ykList = resp as DmilanModel[]\n    });\n  }\n  //navigates to next page\n  addToList() {\n    if(this.yInput)\n    {\n      let temp;\n      temp=this.yInput.split(\" \");\n      console.log(temp);\n    }\n      else{\n        this.router.navigate(['/', 'd-milan'])\n      }\n  }\n  //deletes the row based on index value\n  delete(index): void {\n    this.ykList.splice(index, 1)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}